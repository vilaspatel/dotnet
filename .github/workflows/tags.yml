name: tags

on: workflow_dispatch # Trigger on any new tag push (e.g., v1.1.0)

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Get the latest tag
      id: get_latest_tag
      run: |
        # Get the latest tag (most recent release)
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "none")
        echo "Latest tag: $latest_tag"
        echo "::set-output name=latest_tag::$latest_tag"

    - name: Get commit messages since last release
      id: get_commit_messages
      run: |
        # Get the commit messages between the latest tag and the current commit (HEAD)
        commits=$(git log ${{ steps.get_latest_tag.outputs.latest_tag }}..HEAD --pretty=format:"%s")
        echo "Commits since last release:\n$commits"
        echo "::set-output name=commits::$commits"

    - name: Create new tag
      id: create_tag
      run: |
        # Define the new tag and message
        new_tag="v$(date +'%Y.%m.%d.%H%M')"  # Use a timestamp-based tag or any naming convention
        echo "Creating new tag: $new_tag"
        
        # Create the tag
        git tag -a "$new_tag" -m "Release $new_tag\n\nCommits since ${{ steps.get_latest_tag.outputs.latest_tag }}:\n${{ steps.get_commit_messages.outputs.commits }}"

        # Push the new tag to the remote
        git push origin "$new_tag"

    - name: Create GitHub release
      run: |
        # Create the release using the GitHub API
        new_tag="${new_tag}"
        release_notes="${{ steps.get_commit_messages.outputs.commits }}"
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"tag_name": "'"${new_tag}"'", "name": "'"${new_tag}"'", "body": "'"${release_notes}"'", "draft": false, "prerelease": false}' \
          https://api.github.com/repos/${{ github.repository }}/releases
